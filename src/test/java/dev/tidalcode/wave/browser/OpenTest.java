package dev.tidalcode.wave.browser;

import dev.tidalcode.wave.page.Page;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.edge.EdgeOptions;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import static dev.tidalcode.flow.assertions.Assert.verify;

public class OpenTest {

    Logger logger = LoggerFactory.getLogger(OpenTest.class);

    @Before
    public void init() {

    }

    @Test
    public void chromeOpenTest() {
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--headless");
        options.addArguments("--remote-allow-origins=*");
        logger.info("This is a chrome test");
        Browser.withOptions(options).open("https://google.co.nz");
        String browserName = ((RemoteWebDriver) Driver.getDriver()).getCapabilities().getBrowserName();
        Assert.assertEquals(browserName, "chrome");
        logger.info("Test finished");
        Browser.close();
    }

    @Test
    @Ignore
    public void firefoxOpenTest() {
        FirefoxOptions options = new FirefoxOptions();
        options.addArguments("--headless");
        Browser.type(BrowserTypes.FIREFOX)
                .withOptions(options)
                .open("https://google.co.nz");
        String browserName = ((RemoteWebDriver) Driver.getDriver()).getCapabilities().getBrowserName();
        Assert.assertEquals(browserName, "firefox");
        Browser.close();
    }

    @Test
    public void edgeOpenTest() {
        EdgeOptions options = new EdgeOptions();
        options.addArguments("--headless");
        Browser.type("edge").withOptions(options).open("https://google.co.nz");
        String browserName = ((RemoteWebDriver) Driver.getDriver()).getCapabilities().getBrowserName();
        Assert.assertEquals(browserName, "MicrosoftEdge");
        Browser.close();
    }

    @Test
    public void multiUrlOpenTest() {
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--headless");
        options.addArguments("--remote-allow-origins=*");
        Browser.withOptions(options).open("https://google.com");
        String currentUrl = Page.currentUrl();
        verify("Initial URL", currentUrl).contains("google.com");
        Browser.open("https://bing.com");
        currentUrl = Page.currentUrl();
        verify("Second URL", currentUrl).contains("bing.com");
    }
}
